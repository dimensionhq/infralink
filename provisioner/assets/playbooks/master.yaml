- name: Master
  gather_facts: false
  hosts: all
  become: true
  tasks:
    - name: Set the hostname
      ansible.builtin.hostname:
        name: "{{ hostname }}"
    - name: Configure k0s master
      ansible.builtin.shell:
        cmd: |
          mkdir -p /etc/k0s
          k0s config create > /tmp/k0s.yaml
          export IP=$(curl -s ipv4.icanhazip.com)
          yq ".spec.api.sans += \"$IP\"" < /tmp/k0s.yaml > /etc/k0s/k0s.yaml && cp /etc/k0s/k0s.yaml /tmp/k0s.yaml #Make them equal so other lines can use the updated one
          yq ".spec.extensions.helm.repositories[0].name = \"metallb\"" < /tmp/k0s.yaml > /etc/k0s/k0s.yaml && cp /etc/k0s/k0s.yaml /tmp/k0s.yaml
          yq ".spec.extensions.helm.repositories[0].url = \"https://metallb.github.io/metallb\"" < /tmp/k0s.yaml > /etc/k0s/k0s.yaml && cp /etc/k0s/k0s.yaml /tmp/k0s.yaml
          yq ".spec.extensions.helm.charts[0].name = \"metallb\"" < /tmp/k0s.yaml > /etc/k0s/k0s.yaml && cp /etc/k0s/k0s.yaml /tmp/k0s.yaml
          yq ".spec.extensions.helm.charts[0].chartname = \"metallb/metallb\"" < /tmp/k0s.yaml > /etc/k0s/k0s.yaml && cp /etc/k0s/k0s.yaml /tmp/k0s.yaml
          yq ".spec.extensions.helm.charts[0].namespace = \"metallb\"" < /tmp/k0s.yaml > /etc/k0s/k0s.yaml && cp /etc/k0s/k0s.yaml /tmp/k0s.yaml

    - name: Check if k0s is running
      ansible.builtin.shell:
        cmd: |
          pgrep k0s
      register: k0s_running
      ignore_errors: true
    - name: Install and start k0s master
      when: k0s_running.rc != 0
      ansible.builtin.shell:
        cmd: |
          k0s install controller -c /etc/k0s/k0s.yaml --enable-worker 
          k0s start
    - name: Generate token and kubectl
      ansible.builtin.shell:
        cmd: |
          k0s token create --role=worker --expiry=1h > /tmp/token
          k0s kubeconfig admin > /tmp/kubeconfig-local
          chmod 0600 /tmp/kubeconfig-local
          export IP=$(curl -s ipv4.icanhazip.com)
          yq ".clusters[0].cluster.server = \"https://$IP:6443\"" < /tmp/kubeconfig-local > /tmp/kubeconfig
    - name: Download token
      ansible.builtin.fetch:
        src: /tmp/token
        dest: "{{ config_dir }}/token"
        flat: yes
    - name: Download kubeconfig
      ansible.builtin.fetch:
        src: /tmp/kubeconfig
        dest: "{{ config_dir }}/kubeconfig"
        flat: yes
#    - name: Install Helm
#      ansible.builtin.shell:
#        cmd: |
#          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
#    - name: Upload AWS Cloud Controller Manager Helm values
#      ansible.builtin.copy:
#        src: "values_ccm.yaml"
#        dest: /tmp/values_ccm.yaml
#    - name: Install AWS Cloud Controller Manager Helm chart
#      ansible.builtin.shell:
#        cmd: |
#          helm --kubeconfig /tmp/kubeconfig-local repo add aws-cloud-controller-manager https://kubernetes.github.io/cloud-provider-aws
#          helm --kubeconfig /tmp/kubeconfig-local repo update
#          helm --kubeconfig /tmp/kubeconfig-local upgrade --install aws-cloud-controller-manager aws-cloud-controller-manager/aws-cloud-controller-manager --values /tmp/values_ccm.yaml
#    - name: Upload Metrics Server Helm values
#      ansible.builtin.copy:
#        src: "values_ms.yaml"
#        dest: /tmp/values_ms.yaml
#    - name: Install Metrics Server Helm chart
#      ansible.builtin.shell:
#        cmd: |
#          helm --kubeconfig /tmp/kubeconfig-local repo add metrics-server https://kubernetes-sigs.github.io/metrics-server/
#          helm --kubeconfig /tmp/kubeconfig-local repo update
#          helm --kubeconfig /tmp/kubeconfig-local upgrade --install metrics-server metrics-server/metrics-server --values /tmp/values_ms.yaml